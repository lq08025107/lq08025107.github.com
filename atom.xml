<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[刘强的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lq08025107.github.io/"/>
  <updated>2016-02-29T14:21:31.472Z</updated>
  <id>http://lq08025107.github.io/</id>
  
  <author>
    <name><![CDATA[John Doe]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hadoop之HDFS]]></title>
    <link href="http://lq08025107.github.io/2016/02/29/Hadoop%E4%B9%8BHDFS/"/>
    <id>http://lq08025107.github.io/2016/02/29/Hadoop之HDFS/</id>
    <published>2016-02-29T12:14:01.000Z</published>
    <updated>2016-02-29T14:21:31.472Z</updated>
    <content type="html"><![CDATA[<p>Hadoop是Apache基金会研发的分布式系统基础架构，具体项目来源、发展历程随便上网查一查，一堆一堆的。不知道大家注意到没，市面上Hadoop书籍上面都是一只小象，据说是作者儿子的一个毛绒玩具，小孩子的创造力总是无穷的，才能有这么好听的名字，哈哈，开始，其实我研究的并不深，先是停留在原理性和了解性的阶段，并没有涉及代码层次。</p>
<p>Hadoop的中心思想是利用普通硬件组成集群，来替代性能高、价钱高的服务器，当然到了一个极限的话，价格再高也换不来高性能了，所以Hadoop<br>的出现很有必要。Hadoop主要是要解决两个方面的问题：<strong>存储</strong>、<strong>运算</strong>。这篇文章主要是讲存储系统，即HDFS。<br><a id="more"></a></p>
<p>HDFS(Hadoop Distribute File System，Hadoop分布式文件系统)1.首先是运行在廉价的服务器上 2.需要保存多个副本（默认3个副本），提供容错机制，副本丢失会自动恢复 3.HDFS将文件分割成block，默认大小是64M，然后将block按键值对存储在内存中，若block划分太小，小文件太多的话，内存开销太大，所以HDFS适合处理大数据。</p>
<p>先给出一幅图，然后对图中进行解释：<br><img src="http://7xr558.com1.z0.glb.clouddn.com/hdfs.png" alt="HDFS"></p>
<p>NameNode：名字节点，位于HDFS主端，指导从端的DataNode执行底层的I/O任务，是HDFS中最关键的一点，跟踪文件如何被分割成文件块，文件块被存储在哪些DataNode中等信息，监测整体运行是否正常。</p>
<p>DataNode：数据节点，存储数据，执行MapReduce运算(这个不属于HDFS范畴，不细说)</p>
<p>Secondary NameNode：不接收或记录HDFS的任何实时变化，仅与NameNode通信，按照时间间隔获取快照。</p>
<p>HDFS终究也是个文件系统，文件系统最主要还是离不开读写，无论底层怎么复杂，对用户都是透明的，我们可以大体看一下HDFS读文件的流程。<br><img src="http://7xr558.com1.z0.glb.clouddn.com/HDFS%20%E8%AF%BB%E6%96%87%E4%BB%B6.png" alt="HDFS读文件"></p>
<p>HDFS写文件，以创建新文件并保存为例。<br><img src="http://7xr558.com1.z0.glb.clouddn.com/HDFS%E6%96%B0%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%B9%B6%E4%BF%9D%E5%AD%98.png" alt="HDFS保存"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hadoop是Apache基金会研发的分布式系统基础架构，具体项目来源、发展历程随便上网查一查，一堆一堆的。不知道大家注意到没，市面上Hadoop书籍上面都是一只小象，据说是作者儿子的一个毛绒玩具，小孩子的创造力总是无穷的，才能有这么好听的名字，哈哈，开始，其实我研究的并不深，先是停留在原理性和了解性的阶段，并没有涉及代码层次。</p>
<p>Hadoop的中心思想是利用普通硬件组成集群，来替代性能高、价钱高的服务器，当然到了一个极限的话，价格再高也换不来高性能了，所以Hadoop<br>的出现很有必要。Hadoop主要是要解决两个方面的问题：<strong>存储</strong>、<strong>运算</strong>。这篇文章主要是讲存储系统，即HDFS。<br>]]>
    
    </summary>
    
      <category term="Hadoop HDFS" scheme="http://lq08025107.github.io/tags/Hadoop-HDFS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RPC(Remote Procedure Call Protocol)]]></title>
    <link href="http://lq08025107.github.io/2016/02/24/RPC-Remote-Procedure-Call-Protocol/"/>
    <id>http://lq08025107.github.io/2016/02/24/RPC-Remote-Procedure-Call-Protocol/</id>
    <published>2016-02-24T14:19:56.000Z</published>
    <updated>2016-02-25T12:32:18.563Z</updated>
    <content type="html"><![CDATA[<h1 id="1-_u5B9A_u4E49"><a href="#1-_u5B9A_u4E49" class="headerlink" title="1.定义"></a>1.定义</h1><p>RPC:Remote Procedure Call protocol,远程过程调用协议，通俗来讲即两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。</p>
<h1 id="2-_u8981_u89E3_u51B3_u7684_u95EE_u9898"><a href="#2-_u8981_u89E3_u51B3_u7684_u95EE_u9898" class="headerlink" title="2.要解决的问题"></a>2.要解决的问题</h1><p>正如定义所述，RPC从本质上来讲，只是一种网络通信，由于互联网的高速发展，同一台机器之间需要进行进程之间的通信，然后不同机器之间的进程也需要通信，RPC要解决的问题就是这个，RPC是分布式、集群的基础吧。<br><a id="more"></a></p>
<h1 id="3-_u5982_u4F55_u5B9E_u73B0"><a href="#3-_u5982_u4F55_u5B9E_u73B0" class="headerlink" title="3.如何实现"></a>3.如何实现</h1><p>引用如下的图，来说明RPC的实现原理<br><img src="http://7xr558.com1.z0.glb.clouddn.com/45366c44f775abfd0ac3b43bccc1abc3_r.jpg" alt="PicMissing"><br>从分层的角度来看，个人觉得RPC涉及到了应用层和传输层，这个图例一眼就能看懂，无需多言，如果要自己实现一个这样的框架，应该考虑哪些问题呢？</p>
<p>(A)在Server和Client之间建立TCP通信连接，可以是按需连接，也可以是长连接。</p>
<p>(B)Client如何找到Server，既然是通信，总需要一些向IP、Port之类的东西，还有与Server端的哪个进程的哪个方法通信等问题。</p>
<p>(C)方法的参数传递方式，Client需要把所谓的实参通过网络传递给Server端，就要涉及将内存中的值序列化成二进制的值。</p>
<p>(D)Server收到后需要进行反序列化，然后进行本地调用，得到返回值。</p>
<p>(E)Server将返回值序列化成二进制序列传输给Client，Client进行反序列化即可。</p>
<h1 id="4-_u6846_u67B6"><a href="#4-_u6846_u67B6" class="headerlink" title="4.框架"></a>4.框架</h1><p>RPC只是一个概念，当然有很多组织和企业用自己的方法实现，实现出来的结果就是所谓的框架，搜索了一下，主要有CORBA(Common Object Request Broker Architecture,通用对象请求代理体系结构)、JAVA RMI(Remote Method Invocation,远程方法调用)和Thrift(FB开源框架)等等。</p>
<h1 id="5-_u5B9E_u73B0"><a href="#5-_u5B9E_u73B0" class="headerlink" title="5.实现"></a>5.实现</h1><p>在4.框架中提到了Java的RPC，即RMI，由于我也是Java新手，所以就大体找了个HelloWorld试了试，转自<a href="http://lavasoft.blog.51cto.com/62575/91679/" target="_blank" rel="external">熔岩</a>,代码如下：<br>首先定义接口：IHello<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IHello</span> <span class="keyword">extends</span> <span class="title">Remote</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">helloWorld</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">sayHelloToSomeBody</span><span class="params">(String someBodyName)</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后是服务器端的实现HelloImpl<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.UnicastRemoteObject;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloImpl</span> <span class="keyword">extends</span> <span class="title">UnicastRemoteObject</span> <span class="keyword">implements</span> <span class="title">IHello</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">HelloImpl</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>&#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">helloWorld</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"HelloWorld!"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">sayHelloToSomeBody</span><span class="params">(String someBodyName)</span> <span class="keyword">throws</span> RemoteException</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"Hello "</span>+someBodyName+<span class="string">"!"</span>;</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后是服务器端的HelloServer<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Naming; </span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServer</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			IHello rhello=<span class="keyword">new</span> HelloImpl();</span><br><span class="line">			LocateRegistry.createRegistry(<span class="number">8888</span>);</span><br><span class="line">			Naming.bind(<span class="string">"rmi://localhost:8888/RHello"</span>,rhello);</span><br><span class="line">			System.out.println(<span class="string">"INFO:Bingding Remote Object IHello Successfully!"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(RemoteException e)&#123;</span><br><span class="line">			System.out.println(<span class="string">"Creating Remote Object Exception"</span>);</span><br><span class="line">		&#125;	</span><br><span class="line">		<span class="keyword">catch</span>(AlreadyBoundException e)&#123;</span><br><span class="line">			System.out.println(<span class="string">"AlreadyBoundException"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(MalformedURLException e)&#123;</span><br><span class="line">			System.out.println(<span class="string">"MalformedURLException"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>到此可以运行起来Server端，就不上图了，很简单。</p>
<p>最后是客户端的HelloClient<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Naming; </span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.AlreadyBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.NotBoundException;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloClient</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			IHello rhello=(IHello)Naming.lookup(<span class="string">"rmi://localhost:8888/RHello"</span>);</span><br><span class="line">			System.out.println(rhello.helloWorld());</span><br><span class="line">			System.out.println(rhello.sayHelloToSomeBody(<span class="string">"LiuQiang"</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(NotBoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(MalformedURLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(RemoteException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最后上一张图：<br><img src="http://7xr558.com1.z0.glb.clouddn.com/RMIClient.png" alt="PicMissing"><br>打算如果有时间，试试facebook的RPC：Thrift。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1-_u5B9A_u4E49"><a href="#1-_u5B9A_u4E49" class="headerlink" title="1.定义"></a>1.定义</h1><p>RPC:Remote Procedure Call protocol,远程过程调用协议，通俗来讲即两台服务器A，B，一个应用部署在A服务器上，想要调用B服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。</p>
<h1 id="2-_u8981_u89E3_u51B3_u7684_u95EE_u9898"><a href="#2-_u8981_u89E3_u51B3_u7684_u95EE_u9898" class="headerlink" title="2.要解决的问题"></a>2.要解决的问题</h1><p>正如定义所述，RPC从本质上来讲，只是一种网络通信，由于互联网的高速发展，同一台机器之间需要进行进程之间的通信，然后不同机器之间的进程也需要通信，RPC要解决的问题就是这个，RPC是分布式、集群的基础吧。<br>]]>
    
    </summary>
    
      <category term="Server Java" scheme="http://lq08025107.github.io/tags/Server-Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://lq08025107.github.io/2016/02/22/Hello-World/"/>
    <id>http://lq08025107.github.io/2016/02/22/Hello-World/</id>
    <published>2016-02-22T13:31:57.000Z</published>
    <updated>2016-02-22T14:23:09.127Z</updated>
    <content type="html"><![CDATA[<p>这是我使用Github+Hexo的第一篇博客，也不管到底是技术博还是生活或者情感博了，也不知道以后会不会继续更新了，但至少我知道有一个地方，在无聊的时候我可以进来发泄一下。</p>
<p>今天是正月十五，元宵节，这个节日在我家乡那边算一个很隆重的节日了，刚才爸爸和姐姐去溜大街了，想想自己好久没在家过元宵节了。还记得很小很小的时候，我们还在村里住着，元宵节我和姐姐到城里外婆家过十五，两个人可能一共有1块钱，我姐掌管着（小时候我很依靠姐姐），然后走到烤羊肉串旁边，我说：姐姐，我想吃羊肉串。我俩都不知道那到底是什么味道，后来，姐姐花了2毛钱给我买了一串，具体什么味道早已经忘记了，可是这个细节我记了很久很久。<br><a id="more"></a></p>
<p>上传几张照片，今天突然很想姐姐。<br><img src="http://7xr558.com1.z0.glb.clouddn.com/DSC05428.JPG" alt="PicMissing"><br>这张是我大三时候姐姐去天津找我玩</p>
<p><img src="http://7xr558.com1.z0.glb.clouddn.com/DSC05418.JPG" alt="PicMissing"><br>嘿嘿，我姐漂亮吧</p>
<p>前几天姐来北京拍了婚纱照了，time fly，很怀念小的时候，愿我们都好！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是我使用Github+Hexo的第一篇博客，也不管到底是技术博还是生活或者情感博了，也不知道以后会不会继续更新了，但至少我知道有一个地方，在无聊的时候我可以进来发泄一下。</p>
<p>今天是正月十五，元宵节，这个节日在我家乡那边算一个很隆重的节日了，刚才爸爸和姐姐去溜大街了，想想自己好久没在家过元宵节了。还记得很小很小的时候，我们还在村里住着，元宵节我和姐姐到城里外婆家过十五，两个人可能一共有1块钱，我姐掌管着（小时候我很依靠姐姐），然后走到烤羊肉串旁边，我说：姐姐，我想吃羊肉串。我俩都不知道那到底是什么味道，后来，姐姐花了2毛钱给我买了一串，具体什么味道早已经忘记了，可是这个细节我记了很久很久。<br>]]>
    
    </summary>
    
  </entry>
  
</feed>
